{"version":3,"sources":["components/ColourValueText.jsx","coloursFunctions.js","components/ColoursInnerColumn.jsx","components/ColourShades.jsx","components/Colours.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["ColourValueText","className","colour","defaultText","colourTooltip","useRef","changeText","ref","text","current","textContent","onMouseOut","onClick","navigator","clipboard","writeText","toUpperCase","HexToRGB","r","g","b","hex","String","length","parseInt","RGBToHex","rgb","arr","split","toString","RGBToHSL","cmin","Math","min","cmax","max","delta","h","s","l","round","abs","toFixed","HSLToRGB","hsl","hslArray","c","x","m","getLightnessFromHex","makeColourLighter","colour1","makeColourDarker","handleAddingNewColourBesideCurrent","thisPos","otherPos","colours","setColourArray","coloursArrayCopy","slice","newAverageColour","colour2","rgb1","rgb2","averageColours","newColour","pos","showShades","splice","i","fillColourShadesArrayWithLightShades","colourToMakeLighter","colourArray","toLowerCase","lighterShade","unshift","fillColourShadesArrayWithDarkShades","colourToMakeDarker","darkerShade","push","ColoursInnerColumn","colourObj","removeColour","style","color","handleShadeChange","data-icon","data-inline","type","value","onChange","e","target","handleChangeColour","ColourShades","colourShades","colourShadesDiv","map","shade","handleColourChangeAndShowShades","backgroundColor","Colours","setColour","coloursDiv","App","useState","makeColourObject","coloursArray","randomColourInHex","colourHex","floor","random","href","coloursObject","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d9ed69c.chunk.js","sourcesContent":["import { useRef } from 'react';\r\n\r\nconst ColourValueText = ({className, colour, defaultText}) => {\r\n\r\n  const colourTooltip = useRef(null);\r\n\r\n  function clipboard(colour) {\r\n    navigator.clipboard.writeText(colour);\r\n  }\r\n\r\n  function changeText(ref, text) {\r\n    ref.current.textContent = text;\r\n  }\r\n\r\n  return (\r\n    <p\r\n      className={className}\r\n      onMouseOut={() => {\r\n        changeText(colourTooltip, defaultText);\r\n      }}\r\n      onClick={() => {\r\n        clipboard(colour);\r\n        changeText(colourTooltip, `COPIED: ${colour}`);\r\n      }}\r\n    >\r\n      <span className='tooltiptext' ref={colourTooltip} >{defaultText}</span>\r\n      {colour.toUpperCase()}\r\n    </p>\r\n  )\r\n}\r\n\r\nexport default ColourValueText\r\n","export function handleChangeColour(e, pos, colours, setColourArray) {\r\n  var coloursArrayCopy = colours.slice();\r\n\r\n  coloursArrayCopy[pos].colour = e.target.value;\r\n  \r\n  setColourArray(coloursArrayCopy);\r\n}\r\n\r\nexport function handleShadeChange(colours, colourObj, setColourArray) {\r\n\r\n  var coloursArrayCopy = colours.slice();\r\n\r\n  coloursArrayCopy[colourObj.pos].showShades = true;\r\n\r\n  setColourArray(coloursArrayCopy);\r\n}\r\n\r\nexport function handleColourChangeAndShowShades(colours, colourObj, setColourArray, shade) {\r\n  var coloursArrayCopy = colours.slice();\r\n\r\n  coloursArrayCopy[colourObj.pos].showShades = false;\r\n  coloursArrayCopy[colourObj.pos].colour = shade;\r\n\r\n  setColourArray(coloursArrayCopy);\r\n}\r\n\r\nexport function removeColour(pos, colours, setColourArray) {\r\n  var coloursArrayCopy = colours.slice();\r\n\r\n  //escape if there is only one colour left in the colours Array\r\n  if(coloursArrayCopy.length === 1) {\r\n    return;\r\n  }\r\n\r\n  //Remove colour from array\r\n  coloursArrayCopy.splice(pos, 1);\r\n\r\n  //make sure each colour has correct position property\r\n  for(var i = 0; i < coloursArrayCopy.length; i++) {\r\n    coloursArrayCopy[i].pos = i;\r\n  }\r\n\r\n  setColourArray(coloursArrayCopy);\r\n}\r\n\r\nexport function HexToRGB(hex = String) {\r\n\r\n  var r, g, b, rgb;\r\n  r = g = b = '00';\r\n\r\n  if(hex.length === 4) {\r\n    r = '0x' + hex[1] + hex[1];\r\n    g = '0x' + hex[2] + hex[2];\r\n    b = '0x' + hex[3] + hex[3];\r\n  }\r\n\r\n  if(hex.length === 7) {\r\n    r = '0x' + hex[1] + hex[2];\r\n    g = '0x' + hex[3] + hex[4];\r\n    b = '0x' + hex[5] + hex[6];\r\n  }\r\n\r\n  rgb = `${parseInt(r, 16)} ${parseInt(g, 16)} ${parseInt(b, 16)}`;\r\n\r\n  return rgb;\r\n}\r\n\r\nexport function RGBToHex(rgb = String) {\r\n\r\n  var arr = rgb.split(' ');\r\n\r\n  var r = parseInt(arr[0], 10),\r\n      g = parseInt(arr[1], 10),\r\n      b = parseInt(arr[2], 10);\r\n\r\n  r = r.toString(16);\r\n  g = g.toString(16);\r\n  b = b.toString(16);\r\n\r\n  if (r.length === 1) {\r\n    r = \"0\" + r;\r\n  }\r\n  if (g.length === 1) {\r\n    g = \"0\" + g;\r\n  }\r\n  if (b.length === 1) {\r\n    b = \"0\" + b;\r\n  }\r\n\r\n  return `#${r}${g}${b}`\r\n}\r\n\r\nexport function RGBToHSL(rgb = String) {\r\n\r\n  var arr = rgb.split(' ');\r\n  var r = arr[0];\r\n  var g = arr[1];\r\n  var b = arr[2];\r\n\r\n  // Make r, g and b fractionsof 1\r\n  r /= 255;\r\n  g /= 255;\r\n  b /= 255;\r\n\r\n  // Find the greatest and smallest channel values\r\n  var cmin = Math.min(r, g, b),\r\n      cmax = Math.max(r, g, b),\r\n      delta = cmax - cmin,\r\n      h = 0,\r\n      s = 0,\r\n      l = 0;\r\n\r\n  // Calculate hue\r\n  // No difference\r\n  if(delta === 0) {\r\n    h = 0;\r\n  } else if(cmax === r) {       // Red is max\r\n    h = ((g - b) / delta) % 6;\r\n  } else if(cmax === g) {       // Green is max\r\n    h = (b - r) / delta + 2;\r\n  } else {                      // Blue is max\r\n    h = (r - g) / delta + 4;\r\n  }\r\n\r\n  h = Math.round(h * 60);\r\n\r\n  // Make negative hues positive behind 360degrees\r\n  if(h < 0) {\r\n    h += 360;\r\n  }\r\n\r\n  // Calculate lightness\r\n  l = (cmax + cmin) / 2;\r\n\r\n  // Calculate saturation\r\n  s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\r\n\r\n  // Multiply l and s by 100\r\n  s = +(s * 100).toFixed(1);\r\n  l = +(l * 100).toFixed(1);\r\n\r\n  return `${h} ${s} ${l}`;\r\n\r\n}\r\n\r\nexport function HSLToRGB(hsl = String) {\r\n  \r\n  var hslArray = hsl.split(' ');\r\n\r\n  var h = parseInt(hslArray[0], 10),\r\n      s = parseInt(hslArray[1], 10),\r\n      l = parseInt(hslArray[2], 10);\r\n\r\n  // Must be fractions of 1\r\n  s /= 100;\r\n  l /= 100;\r\n\r\n  var c = (1 - Math.abs(2 * l - 1)) * s,\r\n      x = c * (1 - Math.abs((h / 60) % 2 - 1)),\r\n      m = l - c / 2,\r\n      r = 0,\r\n      g = 0,\r\n      b = 0;\r\n\r\n  if (0 <= h && h < 60) {\r\n    r = c; g = x; b = 0;  \r\n  } else if (60 <= h && h < 120) {\r\n    r = x; g = c; b = 0;\r\n  } else if (120 <= h && h < 180) {\r\n    r = 0; g = c; b = x;\r\n  } else if (180 <= h && h < 240) {\r\n    r = 0; g = x; b = c;\r\n  } else if (240 <= h && h < 300) {\r\n    r = x; g = 0; b = c;\r\n  } else if (300 <= h && h < 360) {\r\n    r = c; g = 0; b = x;\r\n  }\r\n  r = Math.round((r + m) * 255);\r\n  g = Math.round((g + m) * 255);\r\n  b = Math.round((b + m) * 255);\r\n\r\n  return `${r} ${g} ${b}`;\r\n\r\n}\r\n\r\nexport function getLightnessFromHex(colour) {\r\n\r\n  var hsl = RGBToHSL(HexToRGB(colour));\r\n  var arr = hsl.split(' ');\r\n\r\n  return arr[2];\r\n}\r\n\r\nexport function averageColours(colour1, colour2) {\r\n\r\n  var rgb1 = HexToRGB(colour1).split(' ');\r\n  var rgb2 = HexToRGB(colour2).split(' ');\r\n\r\n  var r = Math.round((parseInt(rgb1[0], 10) + parseInt(rgb2[0], 10)) / 2);\r\n  var g = Math.round((parseInt(rgb1[1], 10) + parseInt(rgb2[1], 10)) / 2);\r\n  var b = Math.round((parseInt(rgb1[2], 10) + parseInt(rgb2[2], 10)) / 2);\r\n\r\n  return `${r} ${g} ${b}`;\r\n}\r\n\r\nexport function makeColourLighter(colour1) {\r\n\r\n  var hsl = RGBToHSL(HexToRGB(colour1));\r\n\r\n  var arr = hsl.split(' ');\r\n\r\n  var h = parseInt(arr[0], 10);\r\n  var s = parseInt(arr[1], 10);\r\n  var l = parseInt(arr[2], 10);\r\n\r\n  if(l >= 95) {\r\n    l = 100;\r\n  } else {\r\n    l += 5;\r\n  }\r\n\r\n  return RGBToHex(HSLToRGB(`${h} ${s} ${l}`));\r\n\r\n}\r\n\r\nexport function makeColourDarker(colour1) {\r\n\r\n  var hsl = RGBToHSL(HexToRGB(colour1));\r\n\r\n  var arr = hsl.split(' ');\r\n\r\n  var h = parseInt(arr[0], 10);\r\n  var s = parseInt(arr[1], 10);\r\n  var l = parseInt(arr[2], 10);\r\n\r\n  if(l <= 5) {\r\n    l = 0;\r\n  } else {\r\n    l -= 5;\r\n  }\r\n\r\n  return RGBToHex(HSLToRGB(`${h} ${s} ${l}`));\r\n}\r\n\r\nexport function handleAddingNewColourBesideCurrent(thisPos, otherPos, colours, setColourArray) {\r\n\r\n  var coloursArrayCopy = colours.slice();\r\n\r\n  if(coloursArrayCopy.length >= 7) {\r\n    return;\r\n  }\r\n\r\n  var colour1, colour2, newAverageColour;\r\n\r\n  if(otherPos < 0 || otherPos > coloursArrayCopy.length - 1) {\r\n\r\n    if(coloursArrayCopy.length === 1) {\r\n      \r\n      if(otherPos < 0) {\r\n        newAverageColour = makeColourDarker(coloursArrayCopy[thisPos].colour);\r\n      } else if(otherPos > 0) {\r\n        newAverageColour = makeColourLighter(coloursArrayCopy[thisPos].colour);\r\n      }\r\n    } else {\r\n      if(thisPos === 0) {\r\n        newAverageColour = makeColourDarker(coloursArrayCopy[thisPos].colour);\r\n      } else if(thisPos === coloursArrayCopy.length - 1) {\r\n        newAverageColour = makeColourLighter(coloursArrayCopy[thisPos].colour);\r\n      }\r\n    }\r\n    \r\n  } else {\r\n    colour1 = coloursArrayCopy[thisPos].colour;\r\n    colour2 = coloursArrayCopy[otherPos].colour;\r\n\r\n    newAverageColour = RGBToHex(averageColours(colour1, colour2));\r\n  }\r\n\r\n  var newColour = {\r\n    colour: newAverageColour,\r\n    pos: 0,\r\n    showShades: false\r\n  }\r\n\r\n  if(thisPos > otherPos) {\r\n    coloursArrayCopy.splice(thisPos, 0, newColour);\r\n  } else {\r\n    coloursArrayCopy.splice(otherPos, 0, newColour);\r\n  }\r\n\r\n  //make sure each colour has correct position property\r\n  for(var i = 0; i < coloursArrayCopy.length; i++) {\r\n    coloursArrayCopy[i].pos = i;\r\n  }\r\n  \r\n  setColourArray(coloursArrayCopy);\r\n\r\n}\r\n\r\nexport function fillColourShadesArrayWithLightShades(colourToMakeLighter, colourArray) {\r\n\r\n  if(colourToMakeLighter.toLowerCase() === '#ffffff') {\r\n    return;\r\n  }\r\n\r\n  var lighterShade = makeColourLighter(colourToMakeLighter);\r\n\r\n  colourArray.unshift(lighterShade);\r\n\r\n  fillColourShadesArrayWithLightShades(lighterShade, colourArray);\r\n\r\n}\r\n\r\nexport function fillColourShadesArrayWithDarkShades(colourToMakeDarker, colourArray) {\r\n\r\n  if(colourToMakeDarker.toLowerCase() === '#000000') {\r\n    return;\r\n  }\r\n\r\n  var darkerShade = makeColourDarker(colourToMakeDarker);\r\n\r\n  colourArray.push(darkerShade);\r\n\r\n  fillColourShadesArrayWithDarkShades(darkerShade, colourArray);\r\n\r\n}\r\n\r\nvar pimp = () => {\r\n  console.log('pimp');\r\n  return 'What is up pimp?';\r\n}\r\n\r\nexport default pimp;","import ColourValueText from './ColourValueText.jsx';\r\nimport {removeColour, getLightnessFromHex, handleChangeColour, HexToRGB, handleShadeChange} from '../coloursFunctions.js';\r\n\r\nconst ColoursInnerColumn = ({colours, setColourArray, colourObj}) => {\r\n\r\n  return (\r\n      <div className='colour-column-inner' >\r\n        <div className='colour-column-inner-btns'>\r\n          <button\r\n            className='\r\n              colour-column-item\r\n              clickable\r\n              tooltip\r\n              btn-delete\r\n            '\r\n            onClick={() => removeColour(colourObj.pos, colours, setColourArray)}\r\n            style={{color: getLightnessFromHex(colourObj.colour) > 50 ? 'black' : 'white'}}\r\n          >\r\n            X\r\n            <span className='tooltiptext' >Remove Colour</span>\r\n          </button>\r\n          <button\r\n            className='\r\n              colour-column-item\r\n              clickable\r\n              tooltip\r\n              btn-shades\r\n            '\r\n            onClick={() => handleShadeChange(colours, colourObj, setColourArray)}\r\n            style={{color: getLightnessFromHex(colourObj.colour) > 50 ? 'black' : 'white'}}\r\n          >\r\n            <p className=\"iconify\" data-icon=\"heroicons-outline:view-list\" data-inline=\"false\"></p>\r\n            <span className='tooltiptext' >Colour Shades</span>\r\n          </button>\r\n          <div\r\n            className='\r\n            colour-column-item\r\n            clickable\r\n            tooltip\r\n            colour-column-item-input\r\n          '\r\n          >\r\n            <input\r\n              type=\"color\" \r\n              value={colourObj.colour}\r\n              onChange={(e) => {handleChangeColour(e, colourObj.pos, colours,  setColourArray)}}\r\n            />\r\n            <span className='tooltiptext' >Change Colour</span>\r\n          </div>\r\n        </div>\r\n        <div className='colour-column-inner-text'>\r\n          <ColourValueText\r\n            className='\r\n              colour-column-item\r\n              clickable\r\n              tooltip\r\n              hex-text\r\n            '\r\n            colour={colourObj.colour}\r\n            defaultText='COPY HEX'\r\n          />\r\n          < ColourValueText\r\n            className='\r\n              colour-column-item\r\n              clickable\r\n              tooltip\r\n              rgb-text\r\n            '\r\n            colour={HexToRGB(colourObj.colour)}\r\n            defaultText='COPY RGB'\r\n          />\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default ColoursInnerColumn\r\n","import {\r\n  getLightnessFromHex, \r\n  fillColourShadesArrayWithDarkShades, \r\n  fillColourShadesArrayWithLightShades,\r\n  handleColourChangeAndShowShades\r\n} from '../coloursFunctions.js';\r\n\r\nconst ColourShades = ({colours , colourObj, setColourArray}) => {\r\n\r\n  var colourShades = [colourObj.colour];\r\n\r\n  fillColourShadesArrayWithLightShades(colourObj.colour, colourShades);\r\n  fillColourShadesArrayWithDarkShades(colourObj.colour, colourShades);\r\n\r\n  var colourShadesDiv = colourShades.map((shade) => {\r\n\r\n    return (\r\n      <div\r\n        className='shade'\r\n        onClick={() => handleColourChangeAndShowShades(colours, colourObj, setColourArray, shade)}\r\n        key={shade}\r\n        style={{\r\n          backgroundColor: shade,\r\n          color: getLightnessFromHex(shade) > 50 ? 'black' : 'white'\r\n        }}\r\n      >\r\n        <p\r\n          className={shade === colourObj.colour ? 'main-shade-text' : 'shade-text'}\r\n        >\r\n          {shade.toUpperCase()}\r\n        </p>\r\n      </div>\r\n    )\r\n  })\r\n\r\n\r\n  return (\r\n    <div className='shades'>\r\n      {colourShadesDiv}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ColourShades\r\n","import ColoursInnerColumn from './ColoursInnerColumn.jsx';\r\nimport ColourShades from './ColourShades.jsx';\r\nimport {getLightnessFromHex, handleAddingNewColourBesideCurrent} from '../coloursFunctions.js';\r\n\r\nconst Colours = ({colour: colours, setColour: setColourArray}) => {\r\n\r\n  var coloursDiv = colours.map((colourObj, i) => {\r\n    \r\n    return (\r\n    <div\r\n      className='colour-column'\r\n      style={{\r\n        backgroundColor: `${colourObj.colour}`,\r\n        color: getLightnessFromHex(colourObj.colour) > 50 ? 'black' : 'white'\r\n      }}\r\n      key={colourObj.pos}\r\n    >\r\n\r\n        {\r\n          !colourObj.showShades ?\r\n          <div\r\n            className='btn-new-colour'\r\n            onClick={() => handleAddingNewColourBesideCurrent(colourObj.pos, colourObj.pos - 1, colours, setColourArray)}\r\n          >+</div> : ''\r\n        }\r\n        {\r\n          colourObj.showShades ?\r\n          <ColourShades colours={colours} colourObj={colourObj} setColourArray={setColourArray} /> :\r\n          <ColoursInnerColumn colours={colours} colourObj={colourObj} setColourArray={setColourArray} />\r\n        }\r\n        {\r\n          !colourObj.showShades ?\r\n          <div\r\n            className='btn-new-colour'\r\n            onClick={() => handleAddingNewColourBesideCurrent(colourObj.pos, colourObj.pos + 1, colours, setColourArray)}\r\n          >+</div> : ''\r\n        }\r\n\r\n    </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className='colours'>\r\n      {coloursDiv}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Colours\r\n","import './App.css';\nimport { useState } from 'react';\nimport Colours from './components/Colours';\n\nfunction App() {\n\n  const [coloursArray, setColourArray] = useState(() => makeColoursArray());\n\n  function makeColoursArray() {\n    return [makeColourObject(0)];\n  }\n\n  function makeColourObject(pos) {\n    var newColour = {\n      colour: randomColourInHex(),\n      pos: pos,\n      showShades: false\n    };\n    return newColour;\n  }\n\n  function randomColourInHex() {\n    var newColour = '#';\n    const colourHex = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n    \n    for(var i = 0; i < 6; i++) {\n      newColour += colourHex[Math.floor(Math.random() * colourHex.length)];\n    }\n    return newColour;\n  }\n\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>Colour Palette Picker</h1>\n\n        <div className=\"creds-div\">\n          <p className=\"cred\">Made by Derek Price</p>\n          <a \n            style={{color: coloursArray[0].colour}}\n            className=\"cred\" \n            href=\"https://github.com/DerekPixel/colour-palette-picker\"\n          >GitHub</a>\n        </div>\n      </header>\n      <Colours colour={coloursArray} setColour={(coloursObject) => {setColourArray(coloursObject)}} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}