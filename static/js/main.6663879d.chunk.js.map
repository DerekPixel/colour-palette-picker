{"version":3,"sources":["coloursFunctions.js","components/ColoursInnerColumn.jsx","components/ColourShades.jsx","components/ColourValueText.jsx","components/Colours.jsx","components/NewPalette.jsx","components/DropDown.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["HexToRGB","r","g","b","hex","String","length","parseInt","RGBToHex","rgb","arr","split","toString","RGBToHSL","cmin","Math","min","cmax","max","delta","h","s","l","round","abs","toFixed","HSLToRGB","hsl","hslArray","c","x","m","makeColourLighter","colour1","makeColourDarker","handleAddingNewColourBesideCurrent","thisPos","otherPos","colours","setColourArray","coloursArrayCopy","slice","newAverageColour","colour","colour2","rgb1","rgb2","averageColours","newColour","pos","showShades","splice","i","fillColourShadesArrayWithLightShades","colourToMakeLighter","colourArray","toLowerCase","lighterShade","unshift","fillColourShadesArrayWithDarkShades","colourToMakeDarker","darkerShade","push","getColourLightnessAndReturnBlackOrWhite","getLightnessFromHex","ColoursInnerColumn","colourObj","className","onClick","colourArrayClone","colourObjClone","j","removeColour","style","color","handleShadeChange","data-icon","data-inline","type","value","onInput","e","target","handleChangeColour","ColourShades","colourShades","colourShadesDiv","map","shade","handleColourChangeAndShowShades","backgroundColor","toUpperCase","ColourValueText","defaultText","colourTooltip","useRef","changeText","ref","text","current","textContent","onMouseOut","navigator","clipboard","writeText","Colours","setColour","useState","newArr","getBrowser","initializeVisibleArray","visible","setVisible","coloursDiv","onMouseOver","handleSwitchingVisibility","onMouseLeave","boolean","visibleArrayCopy","userAgent","indexOf","NewPalette","Array","palettes","setPaletteArray","showInput","setShowInput","paletteName","setPaletteName","paletteInput","handleDocumentClick","contains","useEffect","document","addEventListener","removeEventListener","autoFocus","onChange","placeholder","paletteArrayCopy","colourArrayCopyClone","paletteObj","name","handlePaletteSave","DropDown","dropDownMenuArray","title","setDropdownArray","isOpen","setIsOpen","headerTitle","setHeaderTitle","dropDownRef","dropDown","obj","list","selected","index","newList","originalObj","handleItemClick","listcopy","newPaletteArray","handleDeleteItem","App","makeColourObject","coloursArray","window","localStorage","getItem","JSON","parse","setItem","Data","stringify","makeNewlocalStorageObject","returnDataObjectIfExistsOrCreateDataObjectIfNot","paletteArray","convertArrayToDropDownCompatible","dropDownArray","setDropDownArray","randomColourInHex","colourHex","floor","random","array","arrayCopy","newArray","savePalettesToLocalStorage","href","coloursObject","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6663879d.chunk.js","sourcesContent":["export function handleChangeColour(e, pos, colours, setColourArray) {\r\n  var coloursArrayCopy = colours.slice();\r\n\r\n  var colourArrayClone = [];\r\n\r\n  for(var i = 0; i < coloursArrayCopy.length; i++) {\r\n    var colourObjClone = {...coloursArrayCopy[i]}\r\n\r\n    colourArrayClone.push(colourObjClone);\r\n  }\r\n\r\n  colourArrayClone[pos].colour = e.target.value;\r\n  \r\n  setColourArray(colourArrayClone);\r\n}\r\n\r\nexport function handleShadeChange(colours, colourObj, setColourArray) {\r\n\r\n  var coloursArrayCopy = colours.slice();\r\n\r\n  var colourArrayClone = [];\r\n\r\n  for(var i = 0; i < coloursArrayCopy.length; i++) {\r\n    var colourObjClone = {...coloursArrayCopy[i]}\r\n\r\n    colourArrayClone.push(colourObjClone);\r\n  }\r\n\r\n  colourArrayClone[colourObj.pos].showShades = true;\r\n\r\n  setColourArray(colourArrayClone);\r\n}\r\n\r\nexport function handleColourChangeAndShowShades(colours, colourObj, setColourArray, shade) {\r\n  var coloursArrayCopy = colours.slice();\r\n\r\n  var colourArrayClone = [];\r\n\r\n  for(var i = 0; i < coloursArrayCopy.length; i++) {\r\n    var colourObjClone = {...coloursArrayCopy[i]}\r\n\r\n    colourArrayClone.push(colourObjClone);\r\n  }\r\n\r\n  colourArrayClone[colourObj.pos].showShades = false;\r\n  colourArrayClone[colourObj.pos].colour = shade;\r\n\r\n  setColourArray(colourArrayClone);\r\n}\r\n\r\nexport function removeColour(pos, colours, setColourArray) {\r\n  var coloursArrayCopy = colours.slice();\r\n\r\n  var colourArrayClone = [];\r\n\r\n  for(var i = 0; i < coloursArrayCopy.length; i++) {\r\n    var colourObjClone = {...coloursArrayCopy[i]}\r\n\r\n    colourArrayClone.push(colourObjClone);\r\n  }\r\n\r\n  //escape if there is only one colour left in the colours Array\r\n  if(colourArrayClone.length === 1) {\r\n    return;\r\n  }\r\n\r\n  //Remove colour from array\r\n  colourArrayClone.splice(pos, 1);\r\n\r\n  //make sure each colour has correct position property\r\n  for(var j = 0; j < colourArrayClone.length; j++) {\r\n    colourArrayClone[j].pos = j;\r\n  }\r\n\r\n  setColourArray(colourArrayClone);\r\n}\r\n\r\nexport function HexToRGB(hex = String) {\r\n\r\n  var r, g, b, rgb;\r\n  r = g = b = '00';\r\n\r\n  if(hex.length === 4) {\r\n    r = '0x' + hex[1] + hex[1];\r\n    g = '0x' + hex[2] + hex[2];\r\n    b = '0x' + hex[3] + hex[3];\r\n  }\r\n\r\n  if(hex.length === 7) {\r\n    r = '0x' + hex[1] + hex[2];\r\n    g = '0x' + hex[3] + hex[4];\r\n    b = '0x' + hex[5] + hex[6];\r\n  }\r\n\r\n  rgb = `${parseInt(r, 16)} ${parseInt(g, 16)} ${parseInt(b, 16)}`;\r\n\r\n  return rgb;\r\n}\r\n\r\nexport function RGBToHex(rgb = String) {\r\n\r\n  var arr = rgb.split(' ');\r\n\r\n  var r = parseInt(arr[0], 10),\r\n      g = parseInt(arr[1], 10),\r\n      b = parseInt(arr[2], 10);\r\n\r\n  r = r.toString(16);\r\n  g = g.toString(16);\r\n  b = b.toString(16);\r\n\r\n  if (r.length === 1) {\r\n    r = \"0\" + r;\r\n  }\r\n  if (g.length === 1) {\r\n    g = \"0\" + g;\r\n  }\r\n  if (b.length === 1) {\r\n    b = \"0\" + b;\r\n  }\r\n\r\n  return `#${r}${g}${b}`\r\n}\r\n\r\nexport function RGBToHSL(rgb = String) {\r\n\r\n  var arr = rgb.split(' ');\r\n  var r = arr[0];\r\n  var g = arr[1];\r\n  var b = arr[2];\r\n\r\n  // Make r, g and b fractionsof 1\r\n  r /= 255;\r\n  g /= 255;\r\n  b /= 255;\r\n\r\n  // Find the greatest and smallest channel values\r\n  var cmin = Math.min(r, g, b),\r\n      cmax = Math.max(r, g, b),\r\n      delta = cmax - cmin,\r\n      h = 0,\r\n      s = 0,\r\n      l = 0;\r\n\r\n  // Calculate hue\r\n  // No difference\r\n  if(delta === 0) {\r\n    h = 0;\r\n  } else if(cmax === r) {       // Red is max\r\n    h = ((g - b) / delta) % 6;\r\n  } else if(cmax === g) {       // Green is max\r\n    h = (b - r) / delta + 2;\r\n  } else {                      // Blue is max\r\n    h = (r - g) / delta + 4;\r\n  }\r\n\r\n  h = Math.round(h * 60);\r\n\r\n  // Make negative hues positive behind 360degrees\r\n  if(h < 0) {\r\n    h += 360;\r\n  }\r\n\r\n  // Calculate lightness\r\n  l = (cmax + cmin) / 2;\r\n\r\n  // Calculate saturation\r\n  s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\r\n\r\n  // Multiply l and s by 100\r\n  s = +(s * 100).toFixed(1);\r\n  l = +(l * 100).toFixed(1);\r\n\r\n  return `${h} ${s} ${l}`;\r\n\r\n}\r\n\r\nexport function HSLToRGB(hsl = String) {\r\n  \r\n  var hslArray = hsl.split(' ');\r\n\r\n  var h = parseInt(hslArray[0], 10),\r\n      s = parseInt(hslArray[1], 10),\r\n      l = parseInt(hslArray[2], 10);\r\n\r\n  // Must be fractions of 1\r\n  s /= 100;\r\n  l /= 100;\r\n\r\n  var c = (1 - Math.abs(2 * l - 1)) * s,\r\n      x = c * (1 - Math.abs((h / 60) % 2 - 1)),\r\n      m = l - c / 2,\r\n      r = 0,\r\n      g = 0,\r\n      b = 0;\r\n\r\n  if (0 <= h && h < 60) {\r\n    r = c; g = x; b = 0;  \r\n  } else if (60 <= h && h < 120) {\r\n    r = x; g = c; b = 0;\r\n  } else if (120 <= h && h < 180) {\r\n    r = 0; g = c; b = x;\r\n  } else if (180 <= h && h < 240) {\r\n    r = 0; g = x; b = c;\r\n  } else if (240 <= h && h < 300) {\r\n    r = x; g = 0; b = c;\r\n  } else if (300 <= h && h < 360) {\r\n    r = c; g = 0; b = x;\r\n  }\r\n  r = Math.round((r + m) * 255);\r\n  g = Math.round((g + m) * 255);\r\n  b = Math.round((b + m) * 255);\r\n\r\n  return `${r} ${g} ${b}`;\r\n\r\n}\r\n\r\nexport function getLightnessFromHex(colour) {\r\n\r\n  var hsl = RGBToHSL(HexToRGB(colour));\r\n  var arr = hsl.split(' ');\r\n\r\n  return arr[2];\r\n}\r\n\r\nexport function averageColours(colour1, colour2) {\r\n\r\n  var rgb1 = HexToRGB(colour1).split(' ');\r\n  var rgb2 = HexToRGB(colour2).split(' ');\r\n\r\n  var r = Math.round((parseInt(rgb1[0], 10) + parseInt(rgb2[0], 10)) / 2);\r\n  var g = Math.round((parseInt(rgb1[1], 10) + parseInt(rgb2[1], 10)) / 2);\r\n  var b = Math.round((parseInt(rgb1[2], 10) + parseInt(rgb2[2], 10)) / 2);\r\n\r\n  return `${r} ${g} ${b}`;\r\n}\r\n\r\nexport function makeColourLighter(colour1) {\r\n\r\n  var hsl = RGBToHSL(HexToRGB(colour1));\r\n\r\n  var arr = hsl.split(' ');\r\n\r\n  var h = parseInt(arr[0], 10);\r\n  var s = parseInt(arr[1], 10);\r\n  var l = parseInt(arr[2], 10);\r\n\r\n  if(l >= 95) {\r\n    l = 100;\r\n  } else {\r\n    l += 5;\r\n  }\r\n\r\n  return RGBToHex(HSLToRGB(`${h} ${s} ${l}`));\r\n\r\n}\r\n\r\nexport function makeColourDarker(colour1) {\r\n\r\n  var hsl = RGBToHSL(HexToRGB(colour1));\r\n\r\n  var arr = hsl.split(' ');\r\n\r\n  var h = parseInt(arr[0], 10);\r\n  var s = parseInt(arr[1], 10);\r\n  var l = parseInt(arr[2], 10);\r\n\r\n  if(l <= 5) {\r\n    l = 0;\r\n  } else {\r\n    l -= 5;\r\n  }\r\n\r\n  return RGBToHex(HSLToRGB(`${h} ${s} ${l}`));\r\n}\r\n\r\nexport function handleAddingNewColourBesideCurrent(thisPos, otherPos, colours, setColourArray) {\r\n\r\n  var coloursArrayCopy = colours.slice();\r\n\r\n  if(coloursArrayCopy.length >= 7) {\r\n    return;\r\n  }\r\n\r\n  var colour1, colour2, newAverageColour;\r\n\r\n  if(otherPos < 0 || otherPos > coloursArrayCopy.length - 1) {\r\n\r\n    if(coloursArrayCopy.length === 1) {\r\n      \r\n      if(otherPos < 0) {\r\n        newAverageColour = makeColourDarker(coloursArrayCopy[thisPos].colour);\r\n      } else if(otherPos > 0) {\r\n        newAverageColour = makeColourLighter(coloursArrayCopy[thisPos].colour);\r\n      }\r\n    } else {\r\n      if(thisPos === 0) {\r\n        newAverageColour = makeColourDarker(coloursArrayCopy[thisPos].colour);\r\n      } else if(thisPos === coloursArrayCopy.length - 1) {\r\n        newAverageColour = makeColourLighter(coloursArrayCopy[thisPos].colour);\r\n      }\r\n    }\r\n    \r\n  } else {\r\n    colour1 = coloursArrayCopy[thisPos].colour;\r\n    colour2 = coloursArrayCopy[otherPos].colour;\r\n\r\n    newAverageColour = RGBToHex(averageColours(colour1, colour2));\r\n  }\r\n\r\n  var newColour = {\r\n    colour: newAverageColour,\r\n    pos: 0,\r\n    showShades: false\r\n  }\r\n\r\n  if(thisPos > otherPos) {\r\n    coloursArrayCopy.splice(thisPos, 0, newColour);\r\n  } else {\r\n    coloursArrayCopy.splice(otherPos, 0, newColour);\r\n  }\r\n\r\n  //make sure each colour has correct position property\r\n  for(var i = 0; i < coloursArrayCopy.length; i++) {\r\n    coloursArrayCopy[i].pos = i;\r\n  }\r\n  \r\n  setColourArray(coloursArrayCopy);\r\n\r\n}\r\n\r\nexport function fillColourShadesArrayWithLightShades(colourToMakeLighter, colourArray) {\r\n\r\n  if(colourToMakeLighter.toLowerCase() === '#ffffff') {\r\n    return;\r\n  }\r\n\r\n  var lighterShade = makeColourLighter(colourToMakeLighter);\r\n\r\n  colourArray.unshift(lighterShade);\r\n\r\n  fillColourShadesArrayWithLightShades(lighterShade, colourArray);\r\n\r\n}\r\n\r\nexport function fillColourShadesArrayWithDarkShades(colourToMakeDarker, colourArray) {\r\n\r\n  if(colourToMakeDarker.toLowerCase() === '#000000') {\r\n    return;\r\n  }\r\n\r\n  var darkerShade = makeColourDarker(colourToMakeDarker);\r\n\r\n  colourArray.push(darkerShade);\r\n\r\n  fillColourShadesArrayWithDarkShades(darkerShade, colourArray);\r\n\r\n}\r\n\r\nexport function getColourLightnessAndReturnBlackOrWhite(colour) {\r\n  return getLightnessFromHex(colour) > 40 ? 'black' : 'white'; \r\n}\r\n\r\nvar pimp = () => {\r\n  console.log('pimp');\r\n  return 'What is up pimp?';\r\n}\r\n\r\nexport default pimp;","import {\r\n  removeColour, \r\n  getColourLightnessAndReturnBlackOrWhite, \r\n  handleChangeColour, \r\n  handleShadeChange\r\n} from '../coloursFunctions.js';\r\n\r\nconst ColoursInnerColumn = ({colours, setColourArray, colourObj}) => {\r\n\r\n  return (\r\n      <div className='colour-column-inner' >\r\n        <div className='colour-column-inner-btns'>\r\n          <button\r\n            className='\r\n              colour-column-item\r\n              clickable\r\n              tooltip\r\n              btn-delete\r\n            '\r\n            onClick={() => removeColour(colourObj.pos, colours, setColourArray)}\r\n            style={{color: getColourLightnessAndReturnBlackOrWhite(colourObj.colour)}}\r\n          >\r\n            X\r\n            <span className='tooltiptext' >Remove Colour</span>\r\n          </button>\r\n          <button\r\n            className='\r\n              colour-column-item\r\n              clickable\r\n              tooltip\r\n              btn-shades\r\n            '\r\n            onClick={() => handleShadeChange(colours, colourObj, setColourArray)}\r\n            style={{color: getColourLightnessAndReturnBlackOrWhite(colourObj.colour)}}\r\n          >\r\n            <p className=\"iconify\" data-icon=\"heroicons-outline:view-list\" data-inline=\"false\"></p>\r\n            <span className='tooltiptext' >Colour Shades</span>\r\n          </button>\r\n          <div\r\n            className='\r\n            colour-column-item\r\n            clickable\r\n            tooltip\r\n            colour-column-item-input\r\n          '\r\n          >\r\n            <input\r\n              type=\"color\" \r\n              value={colourObj.colour}\r\n              onInput={(e) => handleChangeColour(e, colourObj.pos, colours,  setColourArray)}\r\n            />\r\n            <span className='tooltiptext' >Change Colour</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default ColoursInnerColumn\r\n","import {\r\n  getColourLightnessAndReturnBlackOrWhite, \r\n  fillColourShadesArrayWithDarkShades, \r\n  fillColourShadesArrayWithLightShades,\r\n  handleColourChangeAndShowShades\r\n} from '../coloursFunctions.js';\r\n\r\nconst ColourShades = ({colours , colourObj, setColourArray}) => {\r\n\r\n  var colourShades = [colourObj.colour];\r\n\r\n  fillColourShadesArrayWithLightShades(colourObj.colour, colourShades);\r\n  fillColourShadesArrayWithDarkShades(colourObj.colour, colourShades);\r\n\r\n  var colourShadesDiv = colourShades.map((shade) => {\r\n\r\n    return (\r\n      <div\r\n        className='shade'\r\n        onClick={() => handleColourChangeAndShowShades(colours, colourObj, setColourArray, shade)}\r\n        key={shade}\r\n        style={{\r\n          backgroundColor: shade,\r\n          color: getColourLightnessAndReturnBlackOrWhite(shade)\r\n        }}\r\n      >\r\n        <p\r\n          className={shade === colourObj.colour ? 'main-shade-text' : 'shade-text'}\r\n        >\r\n          {shade.toUpperCase()}\r\n        </p>\r\n      </div>\r\n    )\r\n  })\r\n\r\n\r\n  return (\r\n    <div className='shades'>\r\n      {colourShadesDiv}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ColourShades\r\n","import { useRef } from 'react';\r\n\r\nconst ColourValueText = ({className, colour, defaultText}) => {\r\n\r\n  const colourTooltip = useRef(null);\r\n\r\n  function clipboard(colour) {\r\n    navigator.clipboard.writeText(colour);\r\n  }\r\n\r\n  function changeText(ref, text) {\r\n    ref.current.textContent = text;\r\n  }\r\n\r\n  return (\r\n    <p\r\n      className={className}\r\n      onMouseOut={() => {\r\n        changeText(colourTooltip, defaultText);\r\n      }}\r\n      onClick={() => {\r\n        clipboard(colour);\r\n        changeText(colourTooltip, `COPIED: ${colour}`);\r\n      }}\r\n    >\r\n      <span className='tooltiptext' ref={colourTooltip} >{defaultText}</span>\r\n      {colour.toUpperCase()}\r\n    </p>\r\n  )\r\n}\r\n\r\nexport default ColourValueText\r\n","import {useState} from 'react';\r\nimport ColoursInnerColumn from './ColoursInnerColumn.jsx';\r\nimport ColourShades from './ColourShades.jsx';\r\nimport ColourValueText from './ColourValueText.jsx';\r\nimport {getColourLightnessAndReturnBlackOrWhite, handleAddingNewColourBesideCurrent, HexToRGB} from '../coloursFunctions.js';\r\n\r\nconst Colours = ({colour: colours, setColour: setColourArray}) => {\r\n\r\n  const [visible, setVisible] = useState(() => initializeVisibleArray());\r\n\r\n  var coloursDiv = colours.map((colourObj, i) => {\r\n    \r\n    return (\r\n    <div\r\n      className='colour-column'\r\n      style={{\r\n        backgroundColor: `${colourObj.colour}`,\r\n        color: getColourLightnessAndReturnBlackOrWhite(colourObj.colour)\r\n      }}\r\n      key={colourObj.pos}\r\n      onMouseOver={() => handleSwitchingVisibility(colourObj.pos, true)}\r\n      onMouseLeave={() => handleSwitchingVisibility(colourObj.pos, false)}\r\n    >\r\n      {\r\n        visible[colourObj.pos] &&\r\n        <>\r\n          {\r\n            !colourObj.showShades &&\r\n            <div\r\n              className='btn-new-colour'\r\n              onClick={() => handleAddingNewColourBesideCurrent(colourObj.pos, colourObj.pos - 1, colours, setColourArray)}\r\n            >+</div>\r\n          }\r\n          {\r\n            colourObj.showShades ?\r\n            <ColourShades colours={colours} colourObj={colourObj} setColourArray={setColourArray} />\r\n            : \r\n            <>\r\n              <ColoursInnerColumn colours={colours} colourObj={colourObj} setColourArray={setColourArray}/>\r\n            </>\r\n          }\r\n          {\r\n            !colourObj.showShades &&\r\n            <div\r\n              className='btn-new-colour'\r\n              onClick={() => handleAddingNewColourBesideCurrent(colourObj.pos, colourObj.pos + 1, colours, setColourArray)}\r\n            >+</div>\r\n          }\r\n        </>\r\n      }\r\n\r\n      {\r\n        !colourObj.showShades &&\r\n        <div className='colour-column-text'>\r\n          <ColourValueText\r\n            className='\r\n              colour-column-item\r\n              clickable\r\n              tooltip\r\n              hex-text\r\n            '\r\n            colour={colourObj.colour}\r\n            defaultText='COPY HEX'\r\n          />\r\n          < ColourValueText\r\n            className='\r\n              colour-column-item\r\n              clickable\r\n              tooltip\r\n              rgb-text\r\n            '\r\n            colour={HexToRGB(colourObj.colour)}\r\n            defaultText='COPY RGB'\r\n          />\r\n        </div>\r\n      }\r\n    </div>\r\n    )\r\n  })\r\n\r\n  function initializeVisibleArray() {\r\n    var newArr = [];\r\n\r\n    for(var i = 0; i < colours.length; i++) {\r\n      if(getBrowser() === 'Firefox') {\r\n        newArr.push(true);\r\n      } else {\r\n        newArr.push(false);\r\n      }\r\n    }\r\n\r\n    return newArr;\r\n  }\r\n\r\n  function handleSwitchingVisibility(pos, boolean) {\r\n    if(getBrowser() !== 'Firefox') {\r\n      var visibleArrayCopy = visible.slice();\r\n\r\n      visibleArrayCopy[pos] = boolean\r\n  \r\n      setVisible(visibleArrayCopy);\r\n    }\r\n  }\r\n\r\n  function getBrowser() {\r\n    if( navigator.userAgent.indexOf(\"Chrome\") !== -1 ) {\r\n      return \"Chrome\";\r\n    } else if( navigator.userAgent.indexOf(\"Opera\") !== -1 ) {\r\n      return \"Opera\";\r\n    } else if( navigator.userAgent.indexOf(\"MSIE\") !== -1 ) {\r\n      return \"IE\";\r\n    } else if( navigator.userAgent.indexOf(\"Firefox\") !== -1 ) {\r\n      return \"Firefox\";\r\n    } else {\r\n      return \"unknown\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='colours'>\r\n      {coloursDiv}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Colours\r\n","import React, {useState, useRef, useEffect} from 'react'\r\n\r\nconst NewPalette = ({colours = Array, palettes = Array, setPaletteArray}) => {\r\n\r\n  const [showInput, setShowInput] = useState(false);\r\n  const [paletteName, setPaletteName] = useState('');\r\n\r\n  const paletteInput = useRef(null);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleDocumentClick);\r\n    return () => {\r\n      document.removeEventListener('click', handleDocumentClick);\r\n    }\r\n  }, [])\r\n\r\n  function handlePaletteSave() {\r\n    if(paletteName === '') {\r\n      return\r\n    }\r\n\r\n    var paletteArrayCopy = palettes.slice();\r\n    var coloursArrayCopy = colours.slice();\r\n    var colourArrayCopyClone = [];\r\n\r\n    for(var i = 0; i < coloursArrayCopy.length; i++) {\r\n      var colourObjClone = {...coloursArrayCopy[i]}\r\n\r\n      colourArrayCopyClone.push(colourObjClone);\r\n    }\r\n\r\n    var paletteObj = {\r\n      name: paletteName,\r\n      colour: colourArrayCopyClone\r\n    };\r\n\r\n    paletteArrayCopy.push(paletteObj);\r\n\r\n    setShowInput(false);\r\n    setPaletteName('');\r\n    setPaletteArray(paletteArrayCopy);\r\n  }\r\n\r\n  function handleDocumentClick(e) {\r\n    if(paletteInput.current && !paletteInput.current.contains(e.target)) {\r\n      setShowInput(true);\r\n    } else {\r\n      setShowInput(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='new-palette'\r\n    >\r\n      <button\r\n        onClick={() => {setShowInput(true)}}\r\n      >Save</button>\r\n      {\r\n        showInput &&\r\n        <>\r\n        <div \r\n          className='overlay'\r\n          ref={paletteInput}\r\n        ></div>\r\n        <div\r\n          className='new-palette-inputs'\r\n        >\r\n          <h2\r\n            className='new-palette-title'\r\n          >Save Palette</h2>\r\n          <input\r\n            autoFocus\r\n            onChange={(e) => {setPaletteName(e.target.value)}}\r\n            placeholder='Palette Name'\r\n            type=\"text\"\r\n            value={paletteName}\r\n          />\r\n          <div\r\n            className='new-palette-input-btn'\r\n          >\r\n            <button\r\n              onClick={() => {handlePaletteSave()}}\r\n            >Save</button>\r\n            <button\r\n              onClick={() => {setShowInput(false)}}\r\n            >Cancel</button>\r\n          </div>\r\n        </div>\r\n        </>\r\n\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewPalette\r\n","import React, { useRef, useState, useEffect } from 'react'\r\n\r\nconst DropDown = ({dropDownMenuArray = Array, title = String, setDropdownArray, setColourArray, setPaletteArray}) => {\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [headerTitle, setHeaderTitle] = useState(title)\r\n\r\n  const dropDownRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleDocumentClick);\r\n    return () => {\r\n      document.removeEventListener('click', handleDocumentClick);\r\n    }\r\n  }, [])\r\n\r\n  var dropDown = dropDownMenuArray.map((obj, i, list) => {\r\n    return (\r\n      <div\r\n        className='dropdown-item-container'\r\n        key={obj.index}\r\n      >\r\n        <div\r\n          className={obj.selected ? 'dropdown-item selected' : 'dropdown-item'}\r\n          onClick={(e) => {handleItemClick(e, obj.index, list)}}\r\n        >\r\n          {obj.title}\r\n        </div>\r\n        <button\r\n        className='dropdown-item-delete-btn'\r\n          onClick={() => {handleDeleteItem(obj.index, list)}}\r\n        >X</button>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  function handleDeleteItem(index, list) {\r\n    var listcopy = list.slice();\r\n    var newPaletteArray = [];\r\n\r\n    listcopy.splice(index, 1);\r\n\r\n    for(var i = 0; i < listcopy.length; i++) {\r\n      newPaletteArray.push(listcopy[i].originalObj);\r\n    }\r\n    setPaletteArray(newPaletteArray);\r\n  }\r\n\r\n  function handleHeaderClick() {\r\n    if(isOpen) {\r\n      setIsOpen(false);\r\n    } else {\r\n      setIsOpen(true);\r\n    }\r\n  }\r\n\r\n  function handleItemClick(e, index, list = Array) {\r\n    var newList = list.slice();\r\n\r\n    for(var i = 0; i < newList.length; i++) {\r\n      if(newList[i].selected === true) {\r\n        newList[i].selected = false;\r\n      }\r\n    }\r\n\r\n    newList[index].selected = true;\r\n\r\n    var colours = newList[index].originalObj.colour;\r\n\r\n    setColourArray(colours);\r\n\r\n    setDropdownArray(newList);\r\n    setIsOpen(false);\r\n    setHeaderTitle(e.target.textContent);\r\n  }\r\n\r\n  function handleDocumentClick(e) {\r\n    if(dropDownRef.current && !dropDownRef.current.contains(e.target)) {\r\n      setIsOpen(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='dropdown' ref={dropDownRef} >\r\n\r\n      <div \r\n        className='dropdown-header'\r\n        onClick={() => {handleHeaderClick()}} \r\n      >\r\n        {headerTitle}\r\n      </div> \r\n\r\n      {\r\n        isOpen &&\r\n      <div \r\n        className='dropdown-list'\r\n      >\r\n        {dropDown}\r\n      </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DropDown\r\n","import './App.css';\nimport { useState, useEffect } from 'react';\nimport Colours from './components/Colours';\nimport NewPalette from './components/NewPalette';\nimport DropDown from './components/DropDown';\n\nfunction App() {\n\n  const [coloursArray, setColourArray] = useState(() => makeColoursArray());\n  const [paletteArray, setPaletteArray] = useState(returnDataObjectIfExistsOrCreateDataObjectIfNot());\n  const [dropDownArray, setDropDownArray] = useState(convertArrayToDropDownCompatible(paletteArray));\n\n  useEffect(() => {\n    savePalettesToLocalStorage();\n    setDropDownArray(convertArrayToDropDownCompatible(paletteArray));\n    return () => {\n\n    }\n  }, [paletteArray])\n\n  function makeColoursArray() {\n    return [makeColourObject(0)];\n  }\n\n  function makeColourObject(pos) {\n    var newColour = {\n      colour: randomColourInHex(),\n      pos: pos,\n      showShades: false\n    };\n    return newColour;\n  }\n\n  function randomColourInHex() {\n    var newColour = '#';\n    const colourHex = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n    \n    for(var i = 0; i < 6; i++) {\n      newColour += colourHex[Math.floor(Math.random() * colourHex.length)];\n    }\n    return newColour;\n  }\n\n  function makeNewlocalStorageObject() {\n    var Data = []\n    return JSON.stringify(Data);\n  };\n\n  function returnDataObjectIfExistsOrCreateDataObjectIfNot() {\n    if(window.localStorage.getItem('user-colour-palettes') === null) {\n      window.localStorage.setItem('user-colour-palettes', makeNewlocalStorageObject());\n    } else {\n      return JSON.parse(window.localStorage.getItem('user-colour-palettes'));\n    }\n    return JSON.parse(window.localStorage.getItem('user-colour-palettes'));\n  };\n\n  function savePalettesToLocalStorage() {\n    var paletteArrayCopy = paletteArray.slice();\n\n    // console.log(paletteArrayCopy);\n\n    window.localStorage.setItem('user-colour-palettes', JSON.stringify(paletteArrayCopy));\n  }\n\n  function convertArrayToDropDownCompatible(array = Array) {\n\n    var arrayCopy = array.slice();\n\n    var newArray = [];\n\n    for(var i = 0; i < arrayCopy.length; i++) {\n      var obj = {\n        title: arrayCopy[i].name,\n        index: i,\n        selected: false,\n        originalObj: arrayCopy[i]\n      };\n\n      newArray.push(obj);\n\n    }\n\n    return newArray;\n\n  }\n\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>Colour Palette Picker</h1>\n\n        <div className=\"header-rows\">\n          <div\n            className=\"header-top-row\"\n          >\n            <div className=\"creds-div\">\n              <p className=\"cred\">Made by Derek Price</p>\n              <a\n                // style={{color: coloursArray[0].colour}}\n                className=\"cred github-link\"\n                href=\"https://github.com/DerekPixel/colour-palette-picker\"\n              >GitHub</a>\n            </div>\n          </div>\n          <hr/>\n          <div\n            className=\"header-bottom-row\"\n          >\n            <div className=\"header-bottom-row-item\">\n              <NewPalette\n                colours={coloursArray}\n                palettes={paletteArray}\n                setPaletteArray={(array) => {setPaletteArray(array)}}\n              />\n            </div>\n            <div className=\"header-bottom-row-item\">\n              <DropDown\n                dropDownMenuArray={dropDownArray}\n                title='Saved Palettes'\n                setDropdownArray={(array) => {setDropDownArray(array)}}\n                setColourArray={(array) => {setColourArray(array)}}\n                setPaletteArray={(array) => {setPaletteArray(array)}}\n              />\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <Colours colour={coloursArray} setColour={(coloursObject) => {setColourArray(coloursObject)}} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}